name: Build macOS App

on:
  workflow_dispatch:
    inputs:
      upload_to_release:
        description: "Upload build to GitHub Release?"
        required: true
        default: "false"
        type: choice
        options:
          - "true"
          - "false"

jobs:
  build-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install Briefcase and dependencies
        run: |
          python -m pip install --upgrade pip
          pip install briefcase
          pip install -r requirements.txt

      - name: Inject dummy version into __main__.py
        run: |
          sed -i '' 's/^__version__ = .*/__version__ = "0.1.0-dev"/' src/canlibrarygenerator/__main__.py

      - name: Build macOS app with Briefcase
        run: |
          briefcase create macOS
          briefcase build macOS
          briefcase package macOS --adhoc-sign
      
      - name: Decode and import certificate
        run: |
          echo "$CERTIFICATE_P12" | base64 --decode > certificate.p12
          security create-keychain -p temp_pass build.keychain
          security default-keychain -s build.keychain
          security unlock-keychain -p temp_pass build.keychain
          security import certificate.p12 -k build.keychain -P "${{ secrets.CERTIFICATE_PASSWORD }}" -T /usr/bin/codesign
          security set-key-partition-list -S apple-tool:,apple: -s -k temp_pass build.keychain
        env:
          CERTIFICATE_P12: ${{ secrets.CERTIFICATE_P12 }}
      
      - name: Sign the .app
        run: |
          APP_PATH="build/canlibrarygenerator/macos/app/CANLibraryGenerator.app"
          echo "Signing $APP_PATH"
          codesign --deep --force --options runtime --sign "Developer ID Application: Josef Drozd (CY8FTFVMDA)" "$APP_PATH"
      
      - name: Sign the .dmg
        run: |
          DMG_PATH=$(find dist -name "*.dmg" | head -n 1)
          echo "Signing $DMG_PATH"
          codesign --force --sign "Developer ID Application: Josef Drozd (CY8FTFVMDA)" "$DMG_PATH"

      - name: Verify .app codesign
        run: |
          codesign --verify --deep --strict --verbose=2 "build/canlibrarygenerator/macos/app/CANLibraryGenerator.app"

      - name: Notarize app
        uses: devbotsxyz/xcode-notarize@v1
        with:
          product-path: build/canlibrarygenerator/macos/app/CANLibraryGenerator.app
          appstore-connect-username: ${{ secrets.APPLE_ID }}
          appstore-connect-password: ${{ secrets.APPLE_APP_SPECIFIC_PASSWORD }}

      - name: Staple notarization ticket
        run: |
          xcrun stapler staple build/canlibrarygenerator/macos/app/CANLibraryGenerator.app

      - name: Upload as artifact (always)
        uses: actions/upload-artifact@v4
        with:
          name: can-library-generator-macos
          path: dist/*.dmg

      - name: Upload to GitHub Release (optional)
        if: ${{ github.event.inputs.upload_to_release == 'true' }}
        uses: softprops/action-gh-release@v1
        with:
          files: dist/*.dmg
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
